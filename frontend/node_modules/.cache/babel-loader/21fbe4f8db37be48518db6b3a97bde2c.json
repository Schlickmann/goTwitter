{"ast":null,"code":"import _regeneratorRuntime from \"/Users/juliani/Documents/GitHub/JavaScriptProjects/goWeek/frontend/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/juliani/Documents/GitHub/JavaScriptProjects/goWeek/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _toConsumableArray from \"/Users/juliani/Documents/GitHub/JavaScriptProjects/goWeek/frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/juliani/Documents/GitHub/JavaScriptProjects/goWeek/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/juliani/Documents/GitHub/JavaScriptProjects/goWeek/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/juliani/Documents/GitHub/JavaScriptProjects/goWeek/frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/juliani/Documents/GitHub/JavaScriptProjects/goWeek/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/juliani/Documents/GitHub/JavaScriptProjects/goWeek/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/juliani/Documents/GitHub/JavaScriptProjects/goWeek/frontend/src/pages/Timeline.js\";\nimport React, { Component } from 'react';\nimport api from '../services/api';\nimport socket from 'socket.io-client';\nimport Tweet from '../components/Tweet.js';\nimport TwitterLogo from \"../twitter.svg\";\nimport './Timeline.css';\n\nvar Timeline =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Timeline, _Component);\n\n  function Timeline() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Timeline);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Timeline)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      newTweet: '',\n      tweets: []\n    };\n\n    _this.subscribeToEvents = function () {\n      var io = socket('http://localhost:3000'); //fica ouvindo a ocorrencia desses eventos\n\n      io.on('tweet', function (data) {\n        //spread operator (...)\n        //conceito de imutabilidade nao usar .push em arrays.\n        _this.setState({\n          tweets: [data].concat(_toConsumableArray(_this.state.tweets))\n        });\n      });\n      io.on('like', function (data) {});\n    };\n\n    _this.handleInputChange = function (ev) {\n      _this.setState({\n        newTweet: ev.target.value\n      });\n    };\n\n    _this.handleNewTweet =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(ev) {\n        var content, author;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!(ev.keyCode !== 13)) {\n                  _context.next = 2;\n                  break;\n                }\n\n                return _context.abrupt(\"return\");\n\n              case 2:\n                content = _this.state.newTweet;\n                author = localStorage.getItem('@GoTwitter:username'); //cria novo tweet\n                // envia requisicao passando rota e objeto contendo dados a ser enviado.\n\n                _context.next = 6;\n                return api.post('tweets', {\n                  content: content,\n                  author: author\n                });\n\n              case 6:\n                //limpando estado do newTweet.\n                _this.setState({\n                  newTweet: ''\n                });\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    return _this;\n  }\n\n  _createClass(Timeline, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                this.subscribeToEvents();\n                _context2.next = 3;\n                return api.get('tweets');\n\n              case 3:\n                response = _context2.sent;\n                this.setState({\n                  tweets: response.data\n                });\n\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      return function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"timeline-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        height: 24,\n        src: TwitterLogo,\n        alt: \"twitter\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }), React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(\"textarea\", {\n        value: this.state.newTweet,\n        onChange: this.handleInputChange,\n        onKeyDown: this.handleNewTweet,\n        placeholder: \"share what you are thinking...\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      })), React.createElement(\"ul\", {\n        className: \"tweet-list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, this.state.tweets.map(function (tweet) {\n        return React.createElement(Tweet, {\n          key: tweet._id,\n          tweet: tweet,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        });\n      })));\n    }\n  }]);\n\n  return Timeline;\n}(Component);\n\nexport { Timeline as default };","map":{"version":3,"sources":["/Users/juliani/Documents/GitHub/JavaScriptProjects/goWeek/frontend/src/pages/Timeline.js"],"names":["React","Component","api","socket","Tweet","Timeline","state","newTweet","tweets","subscribeToEvents","io","on","data","setState","handleInputChange","ev","target","value","handleNewTweet","keyCode","content","author","localStorage","getItem","post","get","response","TwitterLogo","map","tweet","_id"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport api from '../services/api';\nimport socket from 'socket.io-client';\n\nimport Tweet from '../components/Tweet.js';\nimport TwitterLogo from '../twitter.svg';\nimport './Timeline.css';\n\nexport default class Timeline extends Component {\n    state = {\n        newTweet: '',\n        tweets: []\n    }\n\n    async componentDidMount() {\n        this.subscribeToEvents();\n        const response = await api.get('tweets');\n\n        this.setState({ tweets: response.data });\n    }\n\n    subscribeToEvents = () => {\n        const io = socket('http://localhost:3000');\n\n        //fica ouvindo a ocorrencia desses eventos\n        io.on('tweet', data => {\n            //spread operator (...)\n            //conceito de imutabilidade nao usar .push em arrays.\n            this.setState({ tweets: [data, ...this.state.tweets] });\n        });\n\n        io.on('like', data => {});\n    }\n\n    handleInputChange = (ev) => {\n        this.setState({ newTweet: ev.target.value });\n    }\n\n    //async torna funcao assincrona\n    handleNewTweet = async (ev) => {\n        if(ev.keyCode !== 13) return;\n\n        const content = this.state.newTweet;\n        const author = localStorage.getItem('@GoTwitter:username');\n\n        //cria novo tweet\n        // envia requisicao passando rota e objeto contendo dados a ser enviado.\n        await api.post('tweets', { content, author });\n        \n        //limpando estado do newTweet.\n        this.setState({ newTweet: '' });\n    }\n    \n    render() {\n        return (\n            <div className='timeline-wrapper'>\n                <img height={24} src={TwitterLogo} alt='twitter' />\n                <form>\n                    {/* onKeyDown evento chamado toda vez que usuario aperta uma tecla. */}\n                    <textarea \n                        value={this.state.newTweet}\n                        onChange={this.handleInputChange}\n                        onKeyDown={this.handleNewTweet}\n                        placeholder='share what you are thinking...'\n                    />\n                </form>\n                <ul className='tweet-list'>\n                    {this.state.tweets.map(tweet => {\n                        return <Tweet key={tweet._id} tweet={tweet} />\n                    })}\n                </ul>\n                \n            </div>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}